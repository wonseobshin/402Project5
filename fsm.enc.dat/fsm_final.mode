catch { setDesignMode -flowEffort high }
catch { setDesignMode -process 45 }
catch { setAnalysisMode -analysisType bcwc }
catch { setAnalysisMode -checkType setup }
catch { setAnalysisMode -clkSrcPath true }
catch { setAnalysisMode -clockPropagation sdcControl }
catch { setAnalysisMode -virtualIPO false }
catch { setOptMode -allEndPoints true }
catch { setOptMode -drcMargin 0 }
catch { setOptMode -effort high }
catch { setOptMode -fixDrc true }
catch { setOptMode -maxLocalDensity 0.98 }
catch { setOptMode -rPlace true }
catch { setOptMode -setupTargetSlack 0 }
setExtractRCMode  -engine preRoute -total_c_th 0 -relative_c_th 1 -coupling_c_th 0.1
catch { setCTSMode -moveGateLimit 25 }
catch {setNanoRouteMode -quiet -droutePostRouteSpreadWire "false"}
catch {setNanoRouteMode -quiet -droutePostRouteWidenWireRule "LEFSpecialRouteSpec"}
catch {setNanoRouteMode -quiet -drouteUseMultiCutViaEffort "high"}
catch {setNanoRouteMode -quiet -routeConcurrentMinimizeViaCountEffort "medium"}
catch {setNanoRouteMode -quiet -routeDesignFixClockNets false}
catch {setNanoRouteMode -quiet -routeWithSiDriven true}
catch {setNanoRouteMode -quiet -routeWithSiPostRouteFix false}
catch {setNanoRouteMode -quiet -routeWithTimingDriven true}
catch {setNanoRouteMode -quiet -timingEngine ""}

catch { setPlaceMode -checkPinLayerForAccess 1 }
catch { setPlaceMode -checkRoute false }
catch { setPlaceMode -clkGateAware true }
catch { setPlaceMode -congEffort auto }
catch { setPlaceMode -fp false }
catch { setPlaceMode -ignoreScan true }
catch { setPlaceMode -ignoreSpare false }
catch { setPlaceMode -moduleAwareSpare false }
catch { setPlaceMode -modulePlan true }
catch { setPlaceMode -placeIoPins false }
catch { setPlaceMode -powerDriven false }
catch { setPlaceMode -preserveRouting false }
catch { setPlaceMode -reorderScan true }
catch { setPlaceMode -rmAffectedRouting false }
catch { setPlaceMode -swapEEQ false }
catch { setPlaceMode -timingDriven true }
catch { setPlaceMode -useNP true }
catch { setPlaceMode -WLHighEffort false }
catch { setIlmMode -highFanoutPort true -loopBack false -keepFlatten false }
catch { setVerifyGeometryMode -antenna false }
catch { setVerifyGeometryMode -area {0 0 0 0} }
catch { setVerifyGeometryMode -diffCellViol true }
catch { setVerifyGeometryMode -error 1000 }
catch { setVerifyGeometryMode -implantCheck true }
catch { setVerifyGeometryMode -insuffMetalOverlap true }
catch { setVerifyGeometryMode -maxNonPrefLength -1 }
catch { setVerifyGeometryMode -maxWidth true }
catch { setVerifyGeometryMode -mergedMGridCheck true }
catch { setVerifyGeometryMode -minArea true }
catch { setVerifyGeometryMode -minHole true }
catch { setVerifyGeometryMode -minimumCut true }
catch { setVerifyGeometryMode -minSpacing true }
catch { setVerifyGeometryMode -minStep true }
catch { setVerifyGeometryMode -minWidth true }
catch { setVerifyGeometryMode -offMGrid true }
catch { setVerifyGeometryMode -offRGrid false }
catch { setVerifyGeometryMode -overlap true }
catch { setVerifyGeometryMode -padFillerCellsOverlap true }
catch { setVerifyGeometryMode -pinInBlkg false }
catch { setVerifyGeometryMode -regRoutingOnly false }
catch { setVerifyGeometryMode -routingBlkgPinOverlap true }
catch { setVerifyGeometryMode -routingCellBlkgOverlap true }
catch { setVerifyGeometryMode -sameCellViol false }
catch { setVerifyGeometryMode -sameNet true }
catch { setVerifyGeometryMode -short true }
catch { setVerifyGeometryMode -stackedViasOnRegNet false }
catch { setVerifyGeometryMode -useNonDefaultSpacing false }
catch { setVerifyGeometryMode -viaEnclosure true }
catch { setVerifyGeometryMode -wireExt true }
catch { setDelayCalMode -enable_high_fanout true }
catch { setDelayCalMode -engine aae }
catch { setDelayCalMode -ignore_clock_idealness false }
catch { setDelayCalMode -ignoreNetLoad false }
catch { setPinAssignMode -pinEditInBatch false }
catch { setTrialRouteMode -handlePreroute true }
catch { setTrialRouteMode -keepMarkedOptRoutes true }
catch { setImportMode -keepEmptyModule true }
catch { setImportMode -treatUndefinedCellAsBbox false }
catch { setEndCapMode -boundary_tap false }
